{"version":3,"sources":["api/index.js","components/Temperature/TempChart.jsx","components/Precipitation/PrecipitationTable.jsx","components/CityWeather/CityWeather.jsx","App.js","index.js","App.module.css"],"names":["date","DateStruct","Date","getFullYear","getMonth","getDate","authAxios","axios","create","baseURL","headers","Authorization","fetchTempData","a","get","data","modifiedData","hourlyTemp","map","dailyData","hour","Temp","console","log","fetchPrecipData","today","Precipitation","fetchData","current_temp","t2m_max_day","t2m_min_night","AirPressure","Windspeed","uv_index","Feeling","TempChart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","Label","borderColor","fill","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","fontWeight","TableCell","StyledTableRow","root","action","hover","TableRow","PrecipitationTable","dailyDataP","setDailyDataP","DData","PrecTeable","TableContainer","Table","aria-label","TableHead","align","TableBody","row","key","CityWeather","className","cardStyles","container","List","ListItem","ListItemAvatar","Avatar","ListItemText","primary","secondary","App","state","fnFetchData","this","setState","getHours","getMinutes","styles","CssBaseline","Container","maxWidth","style","Grid","spacing","item","xs","Box","m","pt","Typography","variant","gutterBottom","mt","sm","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5adc55f4.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst accessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsIm5hbWUiOiJNcmlkdWwgU2hhcm1hIiwiaWF0IjoxNTk0Mjc3MzQ3LCJleHAiOjE1OTQzMzczNDd9.lWe9Ccu-aDnEZ8bvHJZQ4043ZDxbaJrQU1Q-AuRvn20';\nconst weatherURL = 'https://cors-anywhere.herokuapp.com/https://apps.qmet.de/v1/home_api';\n\nlet date;\ndate = new Date();\nconst DateStruct = date.getFullYear() + '-' + ((date.getMonth() + 1) < 10 ? '0' : '') + (date.getMonth() + 1)  + '-' + (date.getDate() < 10 ? '0' : '') + date.getDate();\n\n\n\n  const authAxios = axios.create({\n      baseURL: weatherURL,\n      headers: {\n          Authorization: `Bearer ${accessToken}`\n      }\n  })\n\nexport const fetchTempData = async () => {\n    try {\n        const { data } = await authAxios.get(`?city=Wiesbaden&date=${DateStruct}&lat=&lon=`);\n        const modifiedData = data.data.data.hourlyTemp.map((dailyData) => ({\n            hour: dailyData.hour,\n            Temp: dailyData.Temp,\n        }));\n        return modifiedData;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchPrecipData = async () => {\n    try {\n        const { data } = await authAxios.get(`?city=Wiesbaden&date=${DateStruct}&lat=&lon=`);\n        const modifiedData = data.data.data.today.map((dailyData) => ({\n            hour: dailyData.hour,\n            Temp: dailyData.Temp,\n            Precipitation: dailyData.Precipitation,\n        }));\n        return modifiedData;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchData = async () => {\n    try {\n        const { data } = await authAxios.get(`?city=Wiesbaden&date=${DateStruct}&lat=&lon=`);\n        const modifiedData = {\n            current_temp: data.data.data.current_temp,\n            t2m_max_day: data.data.data.t2m_max_day,\n            t2m_min_night: data.data.data.t2m_min_night,\n            AirPressure: data.data.data.AirPressure,\n            Windspeed: data.data.data.Windspeed,\n            uv_index: data.data.data.uv_index,\n            Feeling: data.data.data.Feeling,\n        }\n        return modifiedData;\n    }\n    catch (error) {\n        console.log(error);\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nimport { fetchTempData } from '../../api';\n\nconst TempChart = ({ data }) => {\n\n    const [dailyData, setDailyData] = useState({});\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchTempData());\n        }\n        fetchAPI();\n    }, []);\n\n    const lineChart = (\n\n        dailyData.length\n            ? (\n                <Line data={{\n                    labels: dailyData.map(({ hour }) => hour),\n                    datasets: [{\n                        data: dailyData.map(({ Temp }) => Temp),\n                        Label: 'Infected',\n                        borderColor: '#3333ff',\n                        fill: true,\n                    }],\n                }}\n                />) : null\n    );\n    return (\n        <div>{lineChart}</div>\n    )\n}\n\nexport default TempChart;","import React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\n\nimport { fetchPrecipData } from '../../api';\n\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n      fontWeight:\"bold\",\n      backgroundColor: \"white\",\n    },\n  }))(TableCell);\n  \n  const StyledTableRow = withStyles((theme) => ({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  }))(TableRow);\n\nconst PrecipitationTable = ({ data }) => {\n   \n\n    const [dailyDataP, setDailyDataP] = useState({});\n    useEffect(() => {\n        const fetchAPI = async () => {\n            const DData = await fetchPrecipData();\n            setDailyDataP(DData);\n        }\n        fetchAPI();\n    }, []);\n\n    const PrecTeable = (\n\n        dailyDataP.length\n            ? (\n\n\n                <TableContainer >\n                    <Table aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <StyledTableCell align=\"center\">Hour</StyledTableCell>\n                                <StyledTableCell align=\"center\">Temperature</StyledTableCell>\n                                <StyledTableCell align=\"center\">Precipitation</StyledTableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {dailyDataP.map((row) => (\n                               \n                                <StyledTableRow key={row.hour}>\n                                <StyledTableCell align=\"center\">{row.hour}</StyledTableCell>\n                                <StyledTableCell align=\"center\">{row.Temp}</StyledTableCell>\n                                <StyledTableCell align=\"center\">{row.Precipitation}</StyledTableCell>\n                              </StyledTableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n\n\n            ) : null\n    );\n\n    return (\n\n        <div>\n            {PrecTeable}\n        </div>\n    )\n}\nexport default PrecipitationTable;","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport cardStyles from './CityWeather.module.css';\nimport WbSunnyOutlinedIcon from '@material-ui/icons/WbSunnyOutlined';\nimport FilterDramaOutlinedIcon from '@material-ui/icons/FilterDramaOutlined';\nimport AcUnitOutlinedIcon from '@material-ui/icons/AcUnitOutlined';\nimport FlagOutlinedIcon from '@material-ui/icons/FlagOutlined';\nimport LeakAddOutlinedIcon from '@material-ui/icons/LeakAddOutlined';\nimport FlareOutlinedIcon from '@material-ui/icons/FlareOutlined';\nimport CalendarTodayOutlinedIcon from '@material-ui/icons/CalendarTodayOutlined';\n\n\nconst CityWeather = ({data: {current_temp, t2m_max_day, t2m_min_night, AirPressure, Windspeed, uv_index, Feeling}}) => {\n    if(!current_temp){ return 'Data is Loading!...';}\n    return(\n        <div className = {cardStyles.container}>\n           <List>\n      <ListItem>\n        <ListItemAvatar>\n          <Avatar>\n            <FilterDramaOutlinedIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary={current_temp} secondary=\"Current Temperature\" />\n      </ListItem>\n      <ListItem>\n        <ListItemAvatar>\n          <Avatar>\n            <WbSunnyOutlinedIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary={t2m_max_day} secondary=\"Maximum Temperature\" />\n      </ListItem>\n      <ListItem>\n        <ListItemAvatar>\n          <Avatar>\n            <AcUnitOutlinedIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary={t2m_min_night} secondary=\"Minimum Temperature\" />\n      </ListItem>\n      <ListItem>\n        <ListItemAvatar>\n          <Avatar>\n            <LeakAddOutlinedIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary={AirPressure} secondary=\"Air Pressure\" />\n      </ListItem>\n      <ListItem>\n        <ListItemAvatar>\n          <Avatar>\n            <FlagOutlinedIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary={Windspeed} secondary=\"Wind Speed\" />\n      </ListItem>\n      <ListItem>\n        <ListItemAvatar>\n          <Avatar>\n            <FlareOutlinedIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary={uv_index} secondary=\"UV\" />\n      </ListItem>\n      <ListItem>\n        <ListItemAvatar>\n          <Avatar>\n            <CalendarTodayOutlinedIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary={Feeling} secondary=\"Feeling\" />\n      </ListItem>\n    </List>\n        </div>\n    )\n}\n\nexport default CityWeather;","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\n\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\n\n\nimport TempChart from './components/Temperature/TempChart';\nimport PrecipitationTable from './components/Precipitation/PrecipitationTable';\nimport CityWeather from './components/CityWeather/CityWeather';\n\nimport {fetchData} from './api';\n\nimport styles from './App.module.css';\n\nclass App extends React.Component {\n\n    state = {\n        data: {},\n    }\n\nasync componentDidMount(){\n    const fnFetchData = await fetchData();\n    this.setState({data:fnFetchData});\n}\n\n    render() {\n        const { data } = this.state;\n        let date;\ndate = new Date();\nconst DateStruct = date.getFullYear() + '-' + ((date.getMonth() + 1) < 10 ? '0' : '') + (date.getMonth() + 1)  + '-' + (date.getDate() < 10 ? '0' : '') + date.getDate() + ' at ' + (date.getHours() < 10 ? '0' : '') + date.getHours() + ':' + (date.getMinutes() < 10 ? '0' : '') + date.getMinutes();\n        return (\n            <div className={styles.container}>\n                <CssBaseline />\n                <Container maxWidth=\"md\" style={{ backgroundColor: '#cfe8fc' }}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12}>\n                            <Box m={2} pt={3}>\n                                <Typography variant=\"h5\" gutterBottom align=\"center\" mt={15}>Wiesbaden Weather on  {DateStruct}</Typography>\n                            </Box>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                        <CityWeather data={ data }/>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <Typography variant=\"h5\" gutterBottom>Precipitation</Typography>\n                            <PrecipitationTable></PrecipitationTable>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography variant=\"h5\" gutterBottom>Hourly Temperature</Typography>\n                            <TempChart></TempChart>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"mainHead\":\"App_mainHead__2qbUK\"};"],"sourceRoot":""}